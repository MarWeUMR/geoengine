name: CI

on:
  push:
    branches: [master, trying, staging, test_ci]
  pull_request:
    branches: [master, trying, staging]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os:
          - ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Rust toolchain version
        id: rust_toolchain
        run: echo "::set-output name=toolchain::$(cat rust-toolchain)"

      - name: Make space by deleting unused software (Workaround cf. https://github.com/actions/runner-images/issues/2840#issuecomment-790492173)
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nodejs clang cmake lld libgdal-dev gdal-bin build-essential curl

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Configure GDAL
        run: |
          export C_INCLUDE_PATH=/usr/include/gdal:$C_INCLUDE_PATH
          export CPLUS_INCLUDE_PATH=/usr/include/gdal:$CPLUS_INCLUDE_PATH
          sudo ldconfig

      - name: Install and set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ steps.rust_toolchain.outputs.toolchain }}
          override: true

      - name: Cache Rust build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

          # Determines if the cache should be saved even when the workflow has failed.
          # Default: "false"
          #cache-on-failure: ""
      - name: Run tests
        env:
          RUSTFLAGS: -C incremental=target/incremental
        run: cargo test ml_model_from_workflow_task_success --all-features --verbose
